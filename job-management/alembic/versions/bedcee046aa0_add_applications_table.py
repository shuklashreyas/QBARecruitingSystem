"""Add applications table

Revision ID: bedcee046aa0
Revises: 00a99a536e39
Create Date: 2025-03-26 14:38:38.595467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects.postgresql import ENUM


# revision identifiers, used by Alembic.
revision: str = 'bedcee046aa0'
down_revision: Union[str, None] = '00a99a536e39'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Define ENUM type
    application_status_enum = ENUM(
        'accepted', 'rejected', 'not_reviewed',
        name='applicationstatus',
        create_type=False  # don't auto-create
    )

    bind = op.get_bind()
    if not bind.dialect.has_type(bind, 'applicationstatus'):
        application_status_enum.create(bind, checkfirst=True)

    # Create table
    op.create_table(
        'applications',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id')),
        sa.Column('job_id', sa.Integer(), sa.ForeignKey('jobs.id')),
        sa.Column('status', application_status_enum,
                  nullable=False, server_default='not_reviewed')
    )

    # Other adjustments
    op.create_index(op.f('ix_applications_id'),
                    'applications', ['id'], unique=False)
    op.alter_column('jobs', 'description',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Text(),
                    existing_nullable=False)
    op.alter_column('jobs', 'detailed_description',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Text(),
                    existing_nullable=True)
    op.drop_index('idx_jobs_title', table_name='jobs')
    op.drop_constraint('jobs_owner_id_fkey', 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'owner_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('jobs', sa.Column('owner_id', sa.INTEGER(),
                  autoincrement=False, nullable=True))
    op.create_foreign_key('jobs_owner_id_fkey', 'jobs',
                          'users', ['owner_id'], ['id'])
    op.create_index('idx_jobs_title', 'jobs', ['title'], unique=False)
    op.alter_column('jobs', 'detailed_description',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('jobs', 'description',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=False)
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    # ### end Alembic commands ###
